
CREATE TABLE MENU (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100),
    ACTIVE_FLAG BOOLEAN,
    PRIMARY_FLAG BOOLEAN,
    ORDER_NUMBER INT,
    ICON_NAME VARCHAR(45),
    MENU_HIGHER_ID INT,
    CONSTRAINT FK_MENU_SELF FOREIGN KEY (MENU_HIGHER_ID) REFERENCES MENU(ID)
);

CREATE TABLE INTERFACE (
    ID SERIAL PRIMARY KEY,
    MENU_ID INT,
    NAME VARCHAR(100),
    URL_ADDRESS VARCHAR(200),
    ORDER_NUMBER INT,
    ACTIVE_FLAG BOOLEAN,
    NEWS_FLAG BOOLEAN,
    ICON_NAME VARCHAR(45),
    CONSTRAINT FK_INTERFACE_MENU FOREIGN KEY (MENU_ID) REFERENCES MENU(ID)
);

CREATE TABLE PERMISSION (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(200),
    INTERFACE_ID INT,
    CODE VARCHAR(100),
    CONSTRAINT FK_PERMISSION_INTERFACE FOREIGN KEY (INTERFACE_ID) REFERENCES INTERFACE(ID)
);

CREATE TABLE PLAN (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100)
);

CREATE TABLE PLAN_PERMISSION (
    PLAN_ID INT,
    PERMISSION_ID INT,
    PRIMARY KEY (PLAN_ID, PERMISSION_ID),
    CONSTRAINT FK_PLAN_PERMISSION_PLAN FOREIGN KEY (PLAN_ID) REFERENCES PLAN(ID),
    CONSTRAINT FK_PLAN_PERMISSION_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);

CREATE TABLE PROFILE_SYSTEM (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(80)
);

CREATE TABLE PROFILE_SYSTEM_PERMISSION (
    PROFILE_SYSTEM_ID INT,
    PERMISSION_ID INT,
    PRIMARY KEY (PROFILE_SYSTEM_ID, PERMISSION_ID),
    CONSTRAINT FK_PROFILE_SYSTEM_PERMISSION_PROFILE_SYSTEM FOREIGN KEY (PROFILE_SYSTEM_ID) REFERENCES PROFILE_SYSTEM(ID),
    CONSTRAINT FK_PROFILE_SYSTEM_PERMISSION_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);

CREATE TABLE "USER" (
    ID SERIAL PRIMARY KEY,
    PROFILE_SYSTEM_ID INT,
    COMPANY_ID INT,
    NAME VARCHAR(80),
    CPF_NUMBER VARCHAR(11),
    EMAIL VARCHAR(100),
    PASSWORD VARCHAR(512),
    RENEW_PASSWORD_FLAG BOOLEAN,
    ACTIVE_FLAG BOOLEAN,
    ACCOUNT_OWNER_FLAG BOOLEAN,
    CONSTRAINT FK_USER_PROFILE_SYSTEM FOREIGN KEY (PROFILE_SYSTEM_ID) REFERENCES PROFILE_SYSTEM(ID),
    CONSTRAINT FK_USER_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
);

CREATE TABLE LOGIN_HISTORY (
    ID SERIAL PRIMARY KEY,
    USER_ID INT,
    LOGIN_DATE TIMESTAMP,
    BROWSER_NAME VARCHAR(100),
    BROWSER_VERSION VARCHAR(30),
    IP_NUMBER VARCHAR(45),
    CONSTRAINT FK_LOGIN_HISTORY_USER FOREIGN KEY (USER_ID) REFERENCES "USER"(ID)
);

CREATE TABLE COMPANY (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100),
    CNPJ_NUMBER VARCHAR(14),
    ACTIVE_FLAG BOOLEAN,
    PLAN_ID INT,
    CONSTRAINT FK_COMPANY_PLAN FOREIGN KEY (PLAN_ID) REFERENCES PLAN(ID)
);

CREATE TABLE TEMPLATE_COMPANY (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(80),
    COMPANY_ID INT,
    CONSTRAINT FK_TEMPLATE_COMPANY_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
);

CREATE TABLE TEMPLATE_COMPANY_PERMISSION (
    TEMPLATE_COMPANY_ID INT,
    PERMISSION_ID INT,
    PRIMARY KEY (TEMPLATE_COMPANY_ID, PERMISSION_ID),
    CONSTRAINT FK_TEMPLATE_COMPANY_PERMISSION_TEMPLATE_COMPANY FOREIGN KEY (TEMPLATE_COMPANY_ID) REFERENCES TEMPLATE_COMPANY(ID),
    CONSTRAINT FK_TEMPLATE_COMPANY_PERMISSION_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);

CREATE TABLE USER_PERMISSION (
    USER_ID INT,
    PERMISSION_ID INT,
    PRIMARY KEY (USER_ID, PERMISSION_ID),
    CONSTRAINT FK_USER_PERMISSION_USER FOREIGN KEY (USER_ID) REFERENCES "USER"(ID),
    CONSTRAINT FK_USER_PERMISSION_PERMISSION FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSION(ID)
);
